import requests
import time


def main():
    plan_id_list = [3290466, 3290467, 3290468, 3290469, 3290470, 3290471, 3290472, 3290473, 3290474, 3290475, 3290476,
                    3290477, 3290478, 3290479, 3290480, 3290481, 3290482, 3290483, 3290484, 3290485, 3290486, 3290487,
                    3290488, 3290489, 3290490, 3290491, 3290492, 3290493, 3290494, 3290495, 3290496, 3290497, 3290498,
                    3290499, 3290500, 3290501, 3290502, 3290503, 3290504, 3290505, 3290506, 3290507, 3290508, 3290510,
                    3290511, 3290513, 3290514, 3290515, 3290516, 3290517, 3290518, 3290519, 3290520, 3290521, 3290522,
                    3290523, 3290524, 3290525, 3290526, 3290527, 3290528, 3290529, 3290530, 3290531, 3290532, 3290533,
                    3290534, 3290535, 3290536, 3290537, 3290538, 3290539, 3290540, 3290541, 3290542, 3290543, 3290544,
                    3290545, 3290546, 3290547, 3290548, 3290549, 3290550, 3290551, 3290552, 3290553, 3290554, 3290555,
                    3290556, 3290557, 3290558, 3290559, 3290560, 3290562, 3290563, 3290564, 3290565, 3290567, 3290568,
                    3290569, 3290570, 3290571, 3290572, 3290573, 3290574, 3290575, 3290576, 3290577, 3290578, 3290579,
                    3290580, 3290581, 3290582, 3290583, 3290584, 3290585, 3290586, 3290587, 3290588, 3290589, 3290590,
                    3290591, 3290592, 3290593, 3290594, 3290595, 3290596, 3290597, 3290598, 3290599, 3290600, 3290601,
                    3290602, 3290603, 3290604, 3290605, 3290606, 3290607, 3290608, 3290609, 3290610, 3290611, 3290612,
                    3290613, 3290614, 3290615, 3290616, 3290617, 3290618, 3290619, 3290620, 3290621, 3290622, 3290624,
                    3290625, 3290627, 3290628, 3290629, 3290630, 3290631, 3290632, 3290633, 3290634, 3290635, 3290636,
                    3290637, 3290638, 3290639, 3290640, 3290641, 3290642, 3290643, 3290644, 3290645, 3290646, 3290647,
                    3290648, 3290649, 3290650, 3290651, 3290652, 3290653, 3290654, 3290655, 3290656, 3290657, 3290658,
                    3290659, 3290660, 3290661, 3290662, 3290663, 3290664, 3290665, 3290666, 3290667, 3290668, 3290669,
                    3290670, 3290671, 3290672, 3290673, 3290674, 3290675, 3290676, 3290677, 3290678, 3290679, 3290680,
                    3290681, 3290682, 3290683, 3290685, 3290686, 3290688, 3290689, 3290700, 3290701, 3290702, 3290703,
                    3290704, 3290705, 3290706, 3290707, 3290708, 3290709, 3290710, 3290711, 3290712, 3290713, 3290714,
                    3290715, 3290716, 3290717, 3290718, 3290719, 3290720, 3290721, 3290722, 3290723, 3290724, 3290725,
                    3290726, 3290727, 3290728, 3290729, 3290730, 3290731, 3290732, 3290733, 3290734, 3290735, 3290736,
                    3290737, 3290738, 3290739, 3290740, 3290741, 3290742, 3290743, 3290744, 3290745, 3290746, 3290747,
                    3290748, 3290749, 3290750, 3290751, 3290752, 3290753, 3290754, 3290755, 3290756, 3290757, 3290758,
                    3290759, 3290760, 3290761, 3290762, 3290763, 3290764, 3290765, 3290766, 3290767, 3290768, 3290769,
                    3290770, 3290771, 3290772, 3290773, 3290774, 3290775, 3290776, 3290778, 3290779, 3290780, 3290781,
                    3290782, 3290783, 3290785, 3290786, 3290787, 3290788, 3290790, 3290791, 3290792, 3290793, 3290794,
                    3290795, 3290796, 3290797, 3290798, 3290799, 3290800, 3290801, 3290802, 3290803, 3290804, 3290805,
                    3290806, 3290807, 3290808, 3290809, 3290810, 3290811, 3290812, 3290813, 3290814, 3290815, 3290816,
                    3290817, 3290818, 3290819, 3290820, 3290821, 3290822, 3290823, 3290825, 3290826, 3290827, 3290828,
                    3290829, 3290830, 3290831, 3290832, 3290833, 3290834, 3290835, 3290836, 3290837, 3290838, 3290839,
                    3290840, 3290841, 3290842, 3290843, 3290844, 3290845, 3290846, 3290847, 3290848, 3290849, 3290850,
                    3290851, 3290852, 3290853, 3290854, 3290855, 3290856, 3290857, 3290858, 3290859, 3290860, 3290861,
                    3290862, 3290863, 3290864, 3290865, 3290866, 3290867, 3290868, 3290869, 3290870, 3290871, 3290872,
                    3290873, 3290874, 3290875, 3290876, 3290877, 3290878, 3290879, 3290880, 3290881, 3290882, 3290883,
                    3290884, 3290885, 3290886, 3290887, 3290888, 3290889, 3290890, 3290891, 3290892, 3290893, 3290894,
                    3290895, 3290896, 3290897, 3290898, 3290899, 3290900, 3290901, 3290902, 3290903, 3290904, 3290905,
                    3290906, 3290907, 3290908, 3290909, 3290910, 3290911, 3290912, 3290913, 3290915, 3290916, 3290917,
                    3290918, 3290919, 3290920, 3290921, 3290922, 3290923, 3290924, 3290925, 3290927, 3290928, 3290929,
                    3290930, 3290931, 3290932, 3290933, 3290934, 3290935, 3290937, 3290938, 3290939, 3290940, 3290941,
                    3290942, 3290943, 3290944, 3290945, 3290946, 3290947, 3290948, 3290949, 3290950, 3290951, 3290952,
                    3290953, 3290954, 3290955, 3290956, 3290957, 3290958, 3290959, 3290960, 3290961, 3290962, 3290963,
                    3290964, 3290965, 3290966, 3290967, 3290968, 3290969, 3290970, 3290971, 3290972, 3290973, 3290974,
                    3290975, 3290976, 3290977, 3290978, 3290979, 3290980, 3290981, 3290982, 3290983, 3290984, 3290985,
                    3290986, 3290987, 3290988, 3290989, 3290990, 3290991, 3290992, 3290993, 3290994, 3290995, 3290996,
                    3290997, 3290998, 3290999, 3291000, 3291001, 3291002, 3291003, 3291004, 3291005, 3291006, 3291007,
                    3291008, 3291009, 3291010, 3291011, 3291012, 3291013, 3291014, 3291016, 3291017, 3291018, 3291019,
                    3291020, 3291021, 3291022, 3291023, 3291024, 3291025, 3291026, 3291027, 3291028, 3291029, 3291030,
                    3291031, 3291032, 3291033, 3291034, 3291035, 3291036, 3291037, 3291038, 3291039, 3291040, 3291041,
                    3291042, 3291043, 3291044, 3291045, 3291046, 3291048, 3291049, 3291050, 3291051, 3291052, 3291053,
                    3291055, 3291056, 3291057, 3291058, 3291060, 3291061, 3291062, 3291063, 3291064, 3291065, 3291066,
                    3291067, 3291068, 3291069, 3291070, 3291071, 3291072, 3291073, 3291074, 3291075, 3291076, 3291077,
                    3291078, 3291079, 3291080, 3291081, 3291082, 3291083, 3291084, 3291085, 3291086, 3291087, 3291088,
                    3291089, 3291090, 3291091, 3291092, 3291093, 3291094, 3291095, 3291096, 3291097, 3291098, 3291099,
                    3291100, 3291101, 3291102, 3291103, 3291104, 3291105, 3291106, 3291107, 3291108, 3291109, 3291110,
                    3291111, 3291112, 3291113, 3291114, 3291115, 3291116, 3291117, 3291118, 3291119, 3291120, 3291121,
                    3291122, 3291123, 3291124, 3291125, 3291126, 3291127, 3291128, 3291129, 3291130, 3291131, 3291132,
                    3291133, 3291134, 3291135, 3291136, 3291137, 3291138, 3291139, 3291140, 3291141, 3291142, 3291143,
                    3291144, 3291145, 3291146, 3291147, 3291148, 3291149, 3291150, 3291151, 3291152, 3291153, 3291154,
                    3291155, 3291156, 3291157, 3291158, 3291159, 3291160, 3291162, 3291163, 3291164, 3291165, 3291166,
                    3291167, 3291168, 3291169, 3291170, 3291171, 3291172, 3291173, 3291174, 3291175, 3291176, 3291177,
                    3291178, 3291179, 3291181, 3291182, 3291183, 3291184, 3291185, 3291186, 3291188, 3291189, 3291190,
                    3291191, 3291193, 3291194, 3291195, 3291196, 3291197, 3291198, 3291199, 3291200, 3291201, 3291202,
                    3291203, 3291204, 3291205, 3291206, 3291207, 3291208, 3291209, 3291210, 3291211, 3291212, 3291213,
                    3291214, 3291215, 3291216, 3291217, 3291218, 3291219, 3291220, 3291221, 3291222, 3291223, 3291224,
                    3291225, 3291226, 3291227, 3291228, 3291229, 3291230, 3291231, 3291232, 3291233, 3291234, 3291235,
                    3291236, 3291237, 3291238, 3291240, 3291241, 3291242, 3291243, 3291244, 3291245, 3291246, 3291247,
                    3291248, 3291249, 3291250, 3291251, 3291252, 3291253, 3291254, 3291255, 3291256, 3291257, 3291258,
                    3291259, 3291260, 3291261, 3291262, 3291263, 3291264, 3291265, 3291266, 3291267, 3291268, 3291269,
                    3291270, 3291271, 3291272, 3291273, 3291274, 3291275, 3291276, 3291277, 3291278, 3291279, 3291280,
                    3291281, 3291282, 3291283, 3291284, 3291285, 3291286, 3291287, 3291288, 3291289, 3291290, 3291291,
                    3291292, 3291293, 3291294, 3291295, 3291306, 3291307, 3291308, 3291309, 3291310, 3291311, 3291312,
                    3291313, 3291314, 3291315, 3291316, 3291317, 3291318, 3291319, 3291320, 3291321, 3291322, 3291323,
                    3291324, 3291325, 3291326, 3291327, 3291328, 3291329, 3291330, 3291331, 3291332, 3291333, 3291334,
                    3291335, 3291336, 3291337, 3291338, 3291339, 3291340, 3291341, 3291342, 3291343, 3291344, 3291345,
                    3291346, 3291347, 3291348, 3291349, 3291350, 3291351, 3291352, 3291353, 3291354, 3291355, 3291356,
                    3291357, 3291358, 3291359, 3291360, 3291361, 3291362, 3291363, 3291364, 3291365, 3291366, 3291367,
                    3291368, 3291369, 3291370, 3291371, 3291372, 3291373, 3291374, 3291375, 3291376, 3291377, 3291378,
                    3291379, 3291380, 3291381, 3291382, 3291383, 3291384, 3291385, 3291386, 3291387, 3291388, 3291389,
                    3291390, 3291391, 3291392, 3291393, 3291394, 3291395, 3291396, 3291397, 3291398, 3291399, 3291400,
                    3291401, 3291402, 3291403, 3291404, 3291405, 3291406, 3291407, 3291408, 3291409, 3291410, 3291411,
                    3291412, 3291413, 3291414, 3291415, 3291416, 3291417, 3291418, 3291419, 3291420, 3291421, 3291422,
                    3291423, 3291424, 3291425, 3291426, 3291427, 3291428, 3291429, 3291430, 3291431, 3291432, 3291433,
                    3291434, 3291435, 3291436, 3291437, 3291438, 3291439, 3291440, 3291441, 3291442, 3291443, 3291444,
                    3291445, 3291446, 3291447, 3291448, 3291449, 3291450, 3291451, 3291452, 3291453, 3291454, 3291455,
                    3291456, 3291457, 3291458, 3291459, 3291460, 3291461, 3291462, 3291463, 3291464, 3291465, 3291466,
                    3291467, 3291468, 3291469, 3291470, 3291471, 3291472, 3291473, 3291474, 3291475, 3291476, 3291477,
                    3291478, 3291479, 3291480, 3291481, 3291482, 3291483, 3291484, 3291485, 3291486, 3291487, 3291488,
                    3291489, 3291490, 3291491, 3291492, 3291493, 3291494, 3291495, 3291496, 3291497, 3291498, 3291499,
                    3291500, 3291501, 3291502, 3291503, 3291504, 3291505, 3291506, 3291507, 3291508, 3291509, 3291510,
                    3291511, 3291512, 3291513, 3291514, 3291515, 3291516, 3291517, 3291518, 3291519, 3291520, 3291521,
                    3291522, 3291523, 3291524, 3291525, 3291526, 3291527, 3291528, 3291529, 3291530, 3291531, 3291532,
                    3291533, 3291534, 3291535, 3291536, 3291537, 3291538, 3291539, 3291540, 3291541, 3291542, 3291543,
                    3291544, 3291546, 3291547, 3291548, 3291549, 3291550, 3291551, 3291552, 3291553, 3291554, 3291555,
                    3291556, 3291557, 3291558, 3291559, 3291560, 3291561, 3291562, 3291563, 3291564, 3291565, 3291566,
                    3291567, 3291568, 3291569, 3291570, 3291571, 3291572, 3291573, 3291574, 3291575, 3291576, 3291577,
                    3291578, 3291579, 3291580, 3291581, 3291582, 3291583, 3291584, 3291585, 3291586, 3291587, 3291588,
                    3291589, 3291590, 3291591, 3291592, 3291593, 3291594, 3291595, 3291596, 3291597, 3291598, 3291599,
                    3291600, 3291601, 3291602, 3291603, 3291604, 3291605, 3291606
                    ]

    # plan_id_list = [3290466, 3290467, 3290468]

    total = len(plan_id_list)
    print("开始更新非标场次, 场次数量总计:{}".format(total))

    err_list = []
    finish = 0
    for plan_id in plan_id_list:
        finish += 1
        try:
            # 获取数据
            plan_info = getLivePlanDetail(plan_id)
            # msg = "获取场次信息:{}成功, 当前进度:{}/{}".format(plan_id, finish, total)

            # 更新数据
            editPlanLive(formatEditData(plan_info))
            msg = "更新场次:{}成功, 当前进度:{}/{}".format(plan_id, finish, total)
        except Exception as e:
            msg = "更新场次:{}异常, 当前进度:{}/{}, err:".format(plan_id, finish, total, e)
            err_list.append([plan_id, e.__str__()])

        print(msg)

        time.sleep(0.1)

    if len(err_list) > 0:
        print("更新非标场次，异常数据：")
        for i in err_list:
            print(i)


def formatEditData(info):

    plan_data = {
        'name': info['name'],
        'is_use': info['is_use'],
        'mode': 6,    # 商城不展示， 写死=6
        'pattern': info['pattern'],
        'teacher_id': info['teacher_id'],
        'app_label': info['app_label'],
        'day': info['day'],
        'start_time': info['start_time'],
        'end_time': info['end_time'],
        'display_day': info['display_day'],
        'display_start_time': info['display_start_time'],
        'display_end_time': info['display_end_time'],
        'unlock_day': info['unlock_day'],
        'unlock_time': info['unlock_time'],
        'operator_id': getOperatorId(),
        'material': info['material'],
        'id': info['id'],
        'brand': info['brand'],
        # 'rid': info['rid'],
        # 'rtype': info['rtype'],
        # 'accompany_day': info['accompany_day'],
        # 'accompany_end_time': info['accompany_end_time'],
        # 'accompany_start_time': info['accompany_start_time'],
        # 'package_id': info['package_id'],
        # 'catalog_id': info['catalog_id'],
    }

    return plan_data


# 获取非标场次详情
def getLivePlanDetail(plan_id):
    cookies, headers = getHeaderAndCookies()

    params = {
        'plan_id': plan_id,
        'brand': '100',
    }

    response = requests.get(
        'https://erpadmin.inner.xiwang.com/LivePlan/LivePlan/livePlanWithId',
        params=params,
        cookies=cookies,
        headers=headers,
    )

    res = response.json()
    response.close()
    if not res or res.get('stat') != 1 or res.get('msg') != 'success':
        raise Exception("场次:{}数据获取失败".format(plan_id))

    return res['data']


# 编辑非标场次
def editPlanLive(data):
    cookies, headers = getHeaderAndCookies()

    response = requests.post(
        'https://erpadmin.inner.xiwang.com/LivePlan/LivePlan/editNonStandardLivePlan',
        cookies=cookies,
        headers=headers,
        data=data,
    )

    res = response.json()
    response.close()
    if not res or res.get('stat') != 1 or res.get('msg') != 'success':
        raise Exception("场次:{}数据更新失败, resp:{}".format(data['id'], res))


def getHeaderAndCookies():
    cookies = {
        'MKC-ExternalAccessToken-3': 'eyJhcHBpZCI6IjIzNSIsInRva2VuIjoiMGE4MTNiZGNhOWMxN2U2MzcxNDBmMmFjYjQ5NzA0MTAifQ==',
        'MKC-ExternalAccessToken': 'eyJhcHBpZCI6IjIzNSIsInRva2VuIjoiMGE4MTNiZGNhOWMxN2U2MzcxNDBmMmFjYjQ5NzA0MTAifQ==',
        'xes_rfh': 'cdS79ATKQs-UVlASAGJJBiKWJza2mg4SHXZMtgRbIL_4LtirvLXQWAawzl7Pc0eUTWGOQnPz5VD29rW95LilECEOLOcmzcrhYNrDKLcS7EB4JsEflGPBzrJcl7v7sreUZFa3mAtslRVN47M7AHgtuv6rOQ-zDDrs2bIN3BQEepU.cv0',
        'is_login': '1',
        'stu_id': '2442509',
        'stu_name': '2442509',
        'userGrade': '13',
        'stu_area_id': '100',
        'isVisitFirst': '1',
        'currentGrade': '11',
        'tal-passport-run-heartbeat-timeStamp': '1712043224677',
        'xesId': '14d48b969eb9bd320bf8b4fb1cd2818b',
        'tal_token': 'tal173UPjCVTjLaxDBl6-xQ6xDLBfnabFxL03cG8ZSLRJWJGGsGhc-U4WzoAE6J045zE40b6l7C9QUfA8mLnPbuZ1LNx3nG-xSVf8MeLrakGcmrAvJx1rT5KtcR7ZK-ae4t3Y5qQjUvx8SR9FGxo-9NvQ6h4e2iTTmz17FRttW8Me0e1omkCIpm9xq3MAbqcLYQWI9zDQFJfz5yfZaGPIZ8gUZr4wRdnMtqq4PHUEN7ZcJwrtO4v9y2yGuF2tFiBazWkf6OkWJnZLWwJVgin--AxGkyn58TWL-KrV1KV9UiHVYTEo98',
        'wx': 'b5f4538f4045a93974ea8e918d40052109mqxm9x9s',
        'prelogid': '557ab42a4b1f84d770f8d0616f77973a',
    }

    headers = {
        'accept': 'application/json, text/plain, */*',
        'accept-language': 'zh-CN,zh;q=0.9',
        # 'cookie': 'MKC-ExternalAccessToken-3=eyJhcHBpZCI6IjIzNSIsInRva2VuIjoiMGE4MTNiZGNhOWMxN2U2MzcxNDBmMmFjYjQ5NzA0MTAifQ==; MKC-ExternalAccessToken=eyJhcHBpZCI6IjIzNSIsInRva2VuIjoiMGE4MTNiZGNhOWMxN2U2MzcxNDBmMmFjYjQ5NzA0MTAifQ==; xes_rfh=cdS79ATKQs-UVlASAGJJBiKWJza2mg4SHXZMtgRbIL_4LtirvLXQWAawzl7Pc0eUTWGOQnPz5VD29rW95LilECEOLOcmzcrhYNrDKLcS7EB4JsEflGPBzrJcl7v7sreUZFa3mAtslRVN47M7AHgtuv6rOQ-zDDrs2bIN3BQEepU.cv0; is_login=1; stu_id=2442509; stu_name=2442509; userGrade=13; stu_area_id=100; isVisitFirst=1; currentGrade=11; tal-passport-run-heartbeat-timeStamp=1712043224677; xesId=14d48b969eb9bd320bf8b4fb1cd2818b; tal_token=tal173UPjCVTjLaxDBl6-xQ6xDLBfnabFxL03cG8ZSLRJWJGGsGhc-U4WzoAE6J045zE40b6l7C9QUfA8mLnPbuZ1LNx3nG-xSVf8MeLrakGcmrAvJx1rT5KtcR7ZK-ae4t3Y5qQjUvx8SR9FGxo-9NvQ6h4e2iTTmz17FRttW8Me0e1omkCIpm9xq3MAbqcLYQWI9zDQFJfz5yfZaGPIZ8gUZr4wRdnMtqq4PHUEN7ZcJwrtO4v9y2yGuF2tFiBazWkf6OkWJnZLWwJVgin--AxGkyn58TWL-KrV1KV9UiHVYTEo98; wx=b5f4538f4045a93974ea8e918d40052109mqxm9x9s; prelogid=557ab42a4b1f84d770f8d0616f77973a',
        'origin': 'https://scm.inner.xiwang.com',
        'priority': 'u=1, i',
        'referer': 'https://scm.inner.xiwang.com/',
        'sec-ch-ua': '"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'same-site',
        'token': '8ed73832fbf0d39899d8073aca05ba77',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36',
        'x-brand': '100',
        'x-check-data-tag': 'true',
    }

    return cookies, headers


def getOperatorId():
    return 2012689


if __name__ == '__main__':
    # pass
    main()

